@using BanleWebsite.Models;
@using BanleWebsite.Services;

@{
    CategoryServices _categoryServices = new CategoryServices();
    ViewBag.Title = "Quản lí danh mục";
    List<Category> categories = ViewBag.categories;
    List<Category> listCategorySortRank = ViewBag.listCategorySortRank;

    List<CategoryWithLevel> listCategoryWithLevel = ViewBag.listCategoryWithLevel;
}



<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="~/Content/bootstrap-3.3.6-dist/css/bootstrap.min.css">

<!-- Optional theme -->
<link rel="stylesheet" href="~/Content/bootstrap-3.3.6-dist/css/bootstrap-theme.min.css">

<!-- Latest compiled and minified JavaScript -->
<script src="~/Content/bootstrap-3.3.6-dist/js/bootstrap.min.js"></script>

<div class="container">
    @{
        if (!"".Equals(ViewBag.Error))
        {
            <div class="alert alert-danger">
                <strong>@Html.Raw(ViewBag.Error)</strong>
            </div>
        }

    }
    <div class="col-md-4">
        <h2>Thêm Category mới</h2>
        @using (Html.BeginForm("saveCategory", "Quanli", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <input id="id" name="id" class="form-control" type="hidden" />
            <label>Tên Category</label>
            <input id="categoryName" name="categoryName" class="form-control" />
            <label>Rank</label>
            <input id="rank" name="rank" class="form-control" />
            <input id="preCateID" name="preCateID" class="form-control" value="@SLIMCONFIG.NONE_PRE_CATEGORY" type="hidden" />

            <input id="btnAddCategory" type="submit" class="btn btn-success" value="Add" />
        }
    </div>
    <div class="col-md-8">
        

        <table class="table">
            @{
                CategoryWithLevel cwl = new CategoryWithLevel();
                cwl.level = 1;
                cwl.preCateId = -1;
                listCategoryWithLevel.Add(cwl);

                for (int i=0;i<listCategoryWithLevel.Count-1;i++)
                {
                    <tr>
                    @for (int j = 0; j < listCategoryWithLevel[i].level - 1; j++)
                    {
                        <td></td>
                    }

                    @*<td>@_categoryServices.findByid(item.id).Name</td>
                    <td>@_categoryServices.findByid(item.id).Rank</td>
                    <td><button class="btn btn-warning" onclick="editCategory(@item.id)">Edit</button></td>
                    <td><button class="btn btn-danger" onclick="deleteCategory(@item.id)">Delete</button></td>*@

                        <td><input id="subCateName+@listCategoryWithLevel[i].id" class="form-control" disabled="disabled" value="@listCategoryWithLevel[i].name" /></td>
                        <td><input id="rankSubCate+@listCategoryWithLevel[i].id" class="form-control" disabled="disabled" value="@listCategoryWithLevel[i].rank" /></td>
                        <td><button id="btnEditSubCate+@listCategoryWithLevel[i].id" class="btn btn-warning" onclick="editSubCategory(@listCategoryWithLevel[i].id)">Edit</button></td>
                        <td><button class="btn btn-danger" onclick="deleteCategory(@listCategoryWithLevel[i].id)">Delete</button></td>
                    </tr>
                    if (!listCategoryWithLevel.Any(lwcl => lwcl.preCateId == listCategoryWithLevel[i].id))
                    {
                        <tr>
                            @for (int j = 0; j < listCategoryWithLevel[i].level; j++)
                            {
                                <td></td>
                            }
                            @using (Html.BeginForm("saveCategory", "Quanli", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                <td hidden="hidden"><input class="form-control" id="subCateID" name="id" /></td>
                                <td hidden="hidden"><input class="form-control" id="SubPreID" name="preCateID" value="@listCategoryWithLevel[i].id" /></td>
                                    <td><input id="subCategoryName" name="categoryName" class="form-control" placeholder="Tên sub-category" /></td>
                                    <td><input id="rankSubCate" name="rank" class="form-control" placeholder="Rank" /></td>
                                    <td><input id="btnAddSubCategory" type="submit" class="btn btn-success" value="Add" /></td>
                            }
                        </tr>
                    }
                    if (listCategoryWithLevel[i + 1].level < listCategoryWithLevel[i].level)
                    {
                        for (int shift = 0; shift < listCategoryWithLevel[i].level - listCategoryWithLevel[i + 1].level; shift++)
                        {
                            <tr>
                                @for (int j = 0; j < listCategoryWithLevel[i].level - 1 - shift; j++)
                                {
                                    <td></td>
                                }
                                @using (Html.BeginForm("saveCategory", "Quanli", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                {
                                    <td hidden="hidden"><input class="form-control" id="subCateID" name="id" /></td>
                                    <td hidden="hidden"><input class="form-control" id="SubPreID" name="preCateID" value="@listCategoryWithLevel[i].preCateId" /></td>
                                    <td><input id="subCategoryName" name="categoryName" class="form-control" placeholder="Tên sub-category" /></td>
                                    <td><input id="rankSubCate" name="rank" class="form-control" placeholder="Rank" /></td>
                                    <td><input id="btnAddSubCategory" type="submit" class="btn btn-success" value="Add" /></td>
                                }
                            </tr>
                        }

                    }
                    


                }

            }
        </table>
    </div>
</div>

<script>
    function editCategory(id)
    {
        console.log(id)
        jQuery.ajax({
            url: "/Quanli/getCategoryInfo",
            data: {
                format: 'json',
                cateID: id,
            },
            error: function () {
                alert("Problem!")
            },
            success: function(data)
            {
                var jq = jQuery.noConflict();
                var cateObj = JSON.parse(data);
                jq("#id").val(cateObj.ID);
                jq("#categoryName").val(cateObj.Name);
                jq("#rank").val(cateObj.Rank);
                jq("#btnAddCategory").val("Update");
            },
            type: 'GET'
        })
    }

    var editable = false;
    function editSubCategory(id)
    {
        if(editable == false)
        {
            var btn = document.getElementById("btnEditSubCate+"+id).firstChild;
            btn.data = btn.data = "Edit" ? "Update" : "Edit";
            var x = document.getElementById("subCateName+"+id).disabled = false;
            var y = document.getElementById("rankSubCate+"+id).disabled = false;
            editable = true;
        }
        else
        {
            var subCateName = document.getElementById("subCateName+"+id).value;
            var rankSubCate = document.getElementById("rankSubCate+"+id).value;
            //alert(subCateName);
            jQuery.ajax({
                url: "/Quanli/editSubCate",
                data: {
                    format: 'json',
                    id: id,
                    name: subCateName,
                    rank: rankSubCate
                },
                error: function() {
                    alert("Problem");
                },
                success: function(data) {
                    if (data === "success")
                    {

                        editable = false;
                        var x = document.getElementById("subCateName+" + id).disabled = true;
                        var y = document.getElementById("subCateName+" + id).disabled = true;
                        location.href = location.href;
                    }
                },
                type: 'POST'
            })
        }
    }

    function deleteCategory(id)
    {
       jQuery.ajax({
            url: "/Quanli/deleteCategory",
            data: {
                format: 'json',
                id: id
            },
            error: function () {
                alert("Problem!")
            },
            success: function(data)
            {
                if (data === "Success")
                {
                    location.href = location.href;
                }
            },
            type: 'POST'
        })
    }
</script>
